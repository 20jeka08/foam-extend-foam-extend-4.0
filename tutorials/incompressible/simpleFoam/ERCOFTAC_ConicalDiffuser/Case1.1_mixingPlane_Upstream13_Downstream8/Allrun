#!/bin/bash
# 
#set -x

. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Load additional RunFunctions 
. ./RunFunctionsSupplemental

export caseName=`basename $PWD`

#We stop this script when we encounter a problem
#trap "exit -1" ERR

nbrPassageUpstream=13
nbrPassageDownstream=8

rUpstreamNumberOfCells=21
rDownstreamNumberOfCells=27

angleUpstream=`echo "scale=10; 360/$nbrPassageUpstream" | bc -l`
angleDownstream=`echo "scale=10; 360/$nbrPassageDownstream" | bc -l`

sed -e "s/nbrPassageUpstream,.*/nbrPassageUpstream, $nbrPassageUpstream\)/" -i.old constant/polyMesh/blockMeshDict.m4 >& /dev/null 
sed -e "s/nbrPassageDownstream,.*/nbrPassageDownstream, $nbrPassageDownstream\)/" -i.old constant/polyMesh/blockMeshDict.m4 >& /dev/null 
sed -e "s/rUpstreamNumberOfCells, .*/rUpstreamNumberOfCells, $rUpstreamNumberOfCells\)/" -i.old constant/polyMesh/blockMeshDict.m4 >& /dev/null 
sed -e "s/rDownstreamNumberOfCells, .*/rDownstreamNumberOfCells, $rDownstreamNumberOfCells\)/" -i.old constant/polyMesh/blockMeshDict.m4 >& /dev/null 

echo "$caseName: Creating the file blockMeshDict using m4"
(cd constant/polyMesh; m4 -P blockMeshDict.m4 > blockMeshDict)

echo "Modifying system/controlDict"
sed -e "s/masterPatchScaleFactor .*/masterPatchScaleFactor $nbrPassageUpstream;/" -i.old system/controlDict >& /dev/null 
sed -e "s/shadowPatchScaleFactor .*/shadowPatchScaleFactor $nbrPassageDownstream;/" -i.old system/controlDict >& /dev/null 

echo "$caseName: Running blockMesh"
runApplicationAndReportOnError blockMesh

echo "$caseName: Updating the boundary file"
# Let's see if pyFoamChangeMixingPlaneBoundary.py is available
command -v pyFoamChangeMixingPlaneBoundary.py >/dev/null
if [ $? -eq 0 ];
then
    echo "Using pyFoamChangeMixingPlaneBoundary.py"
    pyFoamChangeMixingPlaneBoundary.py . B_UPSTREAM     \
        --shadowPatch                    B_DOWNSTREAM   \
        --assembly                       both           \
        --orientation                    dirR_spanTheta \
        --coordinateSystemType           cylindrical    \
        --coordinateSystemOrigin         "(0 0 0)"      \
        --coordinateSystemE1             "(1 0 0)"      \
        --coordinateSystemE3             "(0 0 1)"

    pyFoamChangeMixingPlaneBoundary.py . B_DOWNSTREAM   \
        --shadowPatch                    B_UPSTREAM     \
        --assembly                       both           \
        --orientation                    dirR_spanTheta \
        --coordinateSystemType           cylindrical    \
        --coordinateSystemOrigin         "(0 0 0)"      \
        --coordinateSystemE1             "(1 0 0)"      \
        --coordinateSystemE3             "(0 0 1)"

    echo "Using pyFoamChangeGGIBoundary.py"
    pyFoamChangeGGIBoundary.py . sideWallA_BB_cyclic1    \
        --shadowPatch            sideWallA_BB_cyclic2    \
        --rotationAxis           "(0 0 1)"               \
        --rotationAngle          $angleUpstream                      \
        --zone                   sideWallA_BB_cyclic1Zone

    pyFoamChangeGGIBoundary.py . sideWallA_BB_cyclic2    \
        --shadowPatch            sideWallA_BB_cyclic1    \
        --rotationAxis           "(0 0 1)"               \
        --rotationAngle          -$angleUpstream                     \
        --zone                   sideWallA_BB_cyclic2Zone

    pyFoamChangeGGIBoundary.py . sideWallB_C_cyclic1    \
        --shadowPatch            sideWallB_C_cyclic2    \
        --rotationAxis           "(0 0 1)"              \
        --rotationAngle          $angleDownstream                     \
        --zone                   sideWallB_C_cyclic1Zone

    pyFoamChangeGGIBoundary.py . sideWallB_C_cyclic2    \
        --shadowPatch            sideWallB_C_cyclic1    \
        --rotationAxis           "(0 0 1)"              \
        --rotationAngle          -$angleDownstream                    \
        --zone                   sideWallB_C_cyclic2Zone

    pyFoamChangeGGIBoundary.py . sideWallC_D_cyclic1    \
        --shadowPatch            sideWallC_D_cyclic2    \
        --rotationAxis           "(0 0 1)"              \
        --rotationAngle          $angleDownstream                     \
        --zone                   sideWallC_D_cyclic1Zone

    pyFoamChangeGGIBoundary.py . sideWallC_D_cyclic2    \
        --shadowPatch            sideWallC_D_cyclic1    \
        --rotationAxis           "(0 0 1)"              \
        --rotationAngle          -$angleDownstream                    \
        --zone                   sideWallC_D_cyclic2Zone

    pyFoamChangeGGIBoundary.py . sideWallD_E_cyclic1    \
        --shadowPatch            sideWallD_E_cyclic2    \
        --rotationAxis           "(0 0 1)"              \
        --rotationAngle          $angleDownstream                     \
        --zone                   sideWallD_E_cyclic1Zone

    pyFoamChangeGGIBoundary.py . sideWallD_E_cyclic2    \
        --shadowPatch            sideWallD_E_cyclic1    \
        --rotationAxis           "(0 0 1)"              \
        --rotationAngle          -$angleDownstream                    \
        --zone                   sideWallD_E_cyclic2Zone

    pyFoamChangeGGIBoundary.py . sideWallE_F_cyclic1    \
        --shadowPatch            sideWallE_F_cyclic2    \
        --rotationAxis           "(0 0 1)"              \
        --rotationAngle          $angleDownstream                     \
        --zone                   sideWallE_F_cyclic1Zone

    pyFoamChangeGGIBoundary.py . sideWallE_F_cyclic2    \
        --shadowPatch            sideWallE_F_cyclic1    \
        --rotationAxis           "(0 0 1)"              \
        --rotationAngle          -$angleDownstream                    \
        --zone                   sideWallE_F_cyclic2Zone

else
    echo "pyFoamChangeGGIBoundary.py is missing. Using the file constant/polyMesh/boundary.preconfigured"
    cp constant/polyMesh/boundary.preconfigured constant/polyMesh/boundary
fi

echo "$caseName: Creating the starting time directory"
cp -r 0_orig 0

runApplication setSet -batch setBatchGgi
runApplication setsToZones -noFlipMap

echo "$caseName: Running addSwirlAndRotation"
runApplicationAndReportOnError addSwirlAndRotation

echo "$caseName: Running simpleFoam"
runApplicationAndReportOnError simpleFoam

echo "$caseName: Postprocessing"
cd postProcessing

# Find latest time directory
latestAvailTimeDir=`foamInfoExec -case .. -times | tail -1`

echo "Analysing results for time: $latestAvailTimeDir"

# Run sample
runApplicationAndReportOnError sample -case .. -latestTime

# Adjust compareAll.gplt: replace "Case1.1" "??" by "Case1.1_mixingPlane_Upstream13_Downstream8" "$latestAvailTimeDir"
sed -i.old "s/\"Case1.1\".*$/\"$caseName\" \"$latestAvailTimeDir\"/g" compareAll.gplt

# Run gnuplot to generate the comparison charts
runApplicationAndReportOnError gnuplot compareAll.gplt   ; mv log.gnuplot log.gnuplotCompareAll   

# Run foamLog   
runApplicationAndReportOnError foamLog ../log.simpleFoam              

# Run gnuplot for the residuals
runApplicationAndReportOnError gnuplot plotResiduals.gplt; mv log.gnuplot log.gnuplotPlotResiduals


